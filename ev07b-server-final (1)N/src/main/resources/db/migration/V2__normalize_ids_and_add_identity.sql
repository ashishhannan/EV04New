-- V2: Normalize id columns to bigint identity and ensure sequences are aligned
-- Applies to PostgreSQL 10+

-- geofence.id -> bigint identity
DO $$
BEGIN
  -- Ensure type is BIGINT
  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public' AND table_name = 'geofence' AND column_name = 'id' AND data_type <> 'bigint'
  ) THEN
    EXECUTE 'ALTER TABLE geofence ALTER COLUMN id TYPE bigint USING id::bigint';
  END IF;

  -- If not identity, drop default (if any) and add identity
  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public' AND table_name = 'geofence' AND column_name = 'id' AND (is_identity IS NULL OR is_identity = 'NO')
  ) THEN
    EXECUTE 'ALTER TABLE geofence ALTER COLUMN id DROP DEFAULT';
    EXECUTE 'ALTER TABLE geofence ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY';
  END IF;
END $$;

-- Align the identity/sequence to max(id)+1
SELECT setval(pg_get_serial_sequence('geofence','id'), COALESCE((SELECT MAX(id) FROM geofence), 0) + 1, false);


-- command_log.id -> bigint identity
DO $$
BEGIN
  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public' AND table_name = 'command_log' AND column_name = 'id' AND data_type <> 'bigint'
  ) THEN
    EXECUTE 'ALTER TABLE command_log ALTER COLUMN id TYPE bigint USING id::bigint';
  END IF;

  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public' AND table_name = 'command_log' AND column_name = 'id' AND (is_identity IS NULL OR is_identity = 'NO')
  ) THEN
    EXECUTE 'ALTER TABLE command_log ALTER COLUMN id DROP DEFAULT';
    EXECUTE 'ALTER TABLE command_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY';
  END IF;
END $$;

SELECT setval(pg_get_serial_sequence('command_log','id'), COALESCE((SELECT MAX(id) FROM command_log), 0) + 1, false);


-- pending_command.id -> bigint identity
DO $$
BEGIN
  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public' AND table_name = 'pending_command' AND column_name = 'id' AND data_type <> 'bigint'
  ) THEN
    EXECUTE 'ALTER TABLE pending_command ALTER COLUMN id TYPE bigint USING id::bigint';
  END IF;

  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public' AND table_name = 'pending_command' AND column_name = 'id' AND (is_identity IS NULL OR is_identity = 'NO')
  ) THEN
    EXECUTE 'ALTER TABLE pending_command ALTER COLUMN id DROP DEFAULT';
    EXECUTE 'ALTER TABLE pending_command ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY';
  END IF;
END $$;

SELECT setval(pg_get_serial_sequence('pending_command','id'), COALESCE((SELECT MAX(id) FROM pending_command), 0) + 1, false);

